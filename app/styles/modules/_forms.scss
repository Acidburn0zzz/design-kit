.form-input {
  margin: 1em 0;
  label {
    color: $heading;
    display: block;
    font-size: 1.1rem;
    font-weight: bold;
    margin-bottom: .3rem;
    .required {
      color: $red;
    }
    .optional {
      color: lighten($heading, 20%);
      font-weight: normal;
    }
    &.disabled {
      opacity: 0.5;
    }
  }
  input {
    border-radius: 2px;
    font-size: 1.3rem;
    height: 36px;
    width: 100%;
    background: #ffffff;
    border: 1px solid $grey-border;
    border-top: 1px solid darken($grey-border,2%);
    border-radius: 2px;
    box-shadow: inset 0 1px 2px rgba(0,0,0,0.08);
    padding: 0.8rem;
    resize: none;
    &:focus,
    &.active {
      border: 1px solid darken($grey-border,15%);
      border-top: 1px solid darken($grey-border,17%);
      outline: none;
    }
  }
}

.radio {
  margin-bottom: 0;
  input[type="radio"] {
    display:none;
  }
  input[type="radio"] + label {
    color: $text;
    font-weight: bold;
    &:hover span {
      border-color: $grey-icon;;
    }
  }
  input[type="radio"] + label span {
    display: inline-block;
    width: 14px;
    height: 14px;
    margin: -1px 10px 0 0;
    vertical-align: middle;
    cursor: pointer;
    border-radius:  50%;

  }

  input[type="radio"] + label span {
    border: 2px solid $grey-icon-highlight;
  }
  input[type="radio"]:checked + label span {
    background-color: $green-icon;
    border-color: $green-icon;
    box-shadow: 0 0 0 2px #FFFFFF inset;
  }
  label {
    padding: 0 0 10px 0;
  }
}

/* ! 1.4 - Checkboxes */
/**
 * @ngdoc style
 * @name Checkboxes
 * @module forms
 * @description
 * We use custom checkboxes, which also support the indeterminate state (which has
 * to be set programatically).
 * @example
 * <div class="checkbox_wrap">
 *   <input type="checkbox" id="checkbox" />
 *   <label for="checkbox" class="checkbox_label">Label</label>
 * </div><br />
 * <div class="checkbox_wrap checkbox_indeterminate">
 *   <input type="checkbox" id="indeterminate" />
 *   <label for="indeterminate" class="checkbox_label">Indeterminate</label>
 * </div>
 */
.checkbox_wrap {
  display: block;
  position: relative;
  input[type=checkbox] {
    display: none;
    &:checked + .checkbox_label:before {
      background: url('/images/assets/checkbox_checked.svg') no-repeat center center #fff;
      border: 2px solid $green-icon;
    }
    &:disabled + .checkbox_label {
      opacity: 0.5;
      :before {
        opacity: 0.5;
      }
    }
  }
}
.checkbox_list_item {
  float: left;
  margin: 5px 10px 0 0;
}
.checkbox_label {
  cursor: pointer;
  display: block;
  padding-left: 24px;
  &:before {
    background: #fff;
    border: 2px solid $grey-icon-highlight;
    border-radius: 2px;
    box-shadow: inset 0 1px 1px rgba(0,0,0,0.05);
    content: "";
    height: 14px;
    left: 0;
    margin-top: -7px;
    position: absolute;
    top: 50%;
    width: 14px;
  }
  &:hover:before {
    border: 2px solid $grey-icon;
  }
  &.disabled {
    cursor: default;
    opacity: 0.5;
    text-decoration: line-through;
  }
  b {
    color: $heading;
  }
}

.form-input {
  label {

  }
  select {
    text-transform: none;
    color: #76899A;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 1.3rem;
    line-height: 1.415;
    background: url('../images/ignore/icon-caret.svg') no-repeat right center transparent;
      background-size: 28px 6px;
    border: 1px solid #D1D6DC;
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    -o-appearance: none;
    appearance: none;
    padding: 0.8rem;
    border-radius: 2px;
    font-size: 1.3rem;
    height: 36px;
    width: 100%;
    &:focus {
      border: 1px solid #a6afbb;
      border-top: 1px solid #a0aab7;
      outline: none;
    }
  }
}
